/*
 * MeasuresPane.java
 *
 * Created on July 14, 2008, 10:13 PM
 */
package sicce.api.processor.viewer.controls;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import sicce.api.businesslogic.model.SicceComboBoxModel;
import sicce.api.businesslogic.renderer.SicceComboBoxRenderer;
import sicce.api.info.ConstantsProvider.DisplayMemberRenderType;
import sicce.api.info.interfaces.IPowerMeter;
import sicce.api.processor.Processor;
import sicce.api.processor.viewer.handlers.MeasureViewHandler;

/**
 * Panel para mostrar datos generales de los medidores
 * @author  gish@c
 */
public class MeasuresPane extends javax.swing.JPanel {

    /**
     * Manejador de datos del panel
     */
    private MeasureViewHandler measureViewHandler;

    /**
     * Devuelve el manejador de datos del panel
     * @return Manejador de datos del panel
     */
    public MeasureViewHandler getMeasureViewHandler() {
        return measureViewHandler;
    }
    
    /**
     * Objeto para manejar el modelo de datos del combo
     */
    private SicceComboBoxModel<IPowerMeter> powerMetersComboModel;
    
    /**
     * Objeto para dibujar los valores en el combo
     */
    private SicceComboBoxRenderer powerMetersComboRenderer;
    
    /**
     * Medidores a ser visualizados en el panel
     */
    private Set<IPowerMeter> powerMetersForCurrentUser;

    
    /**
     * Constructor
     * @param powerMetersForCurrentUser Medidores a ser visualizados en el panel
     */
    public MeasuresPane(Set<IPowerMeter> powerMetersForCurrentUser) {
        initComponents();
        this.powerMetersForCurrentUser = powerMetersForCurrentUser;
        measureViewHandler = new MeasureViewHandler(measuresTable, txtPhaseToPhaseVoltage1To2, txtPhaseToPhaseVoltage2To3, txtPhaseToPhaseVoltage3To1,
                txtTotalActivePower, txtTotalApparentPower, txtTotalReactivePower);
        List<IPowerMeter> powerMeters = new ArrayList();
        for (IPowerMeter powerMeter : powerMetersForCurrentUser) {
            powerMeters.add(powerMeter);
        }
        powerMetersComboModel = new SicceComboBoxModel<IPowerMeter>(powerMeters);
        powerMetersComboRenderer = new SicceComboBoxRenderer("getDescription", DisplayMemberRenderType.Method, "getSerial", DisplayMemberRenderType.Method);
        cmbCurrentPowerMeter.setModel(powerMetersComboModel);
        cmbCurrentPowerMeter.setRenderer(powerMetersComboRenderer);
        AttachMeasureToDataProcessor();
        if (cmbCurrentPowerMeter.getItemCount() > 0) {
            cmbCurrentPowerMeter.setSelectedIndex(0);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        measuresTable = new javax.swing.JTable();
        lblCurrentPowerMeter = new javax.swing.JLabel();
        cmbCurrentPowerMeter = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPhaseToPhaseVoltage1To2 = new javax.swing.JTextField();
        txtPhaseToPhaseVoltage2To3 = new javax.swing.JTextField();
        txtPhaseToPhaseVoltage3To1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtTotalActivePower = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotalReactivePower = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTotalApparentPower = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sicce.api.processor.viewer.SicceapiprocessorviewerApp.class).getContext().getResourceMap(MeasuresPane.class);
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane1.border.title"))); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        measuresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        measuresTable.setName("measuresTable"); // NOI18N
        jScrollPane1.setViewportView(measuresTable);

        lblCurrentPowerMeter.setText(resourceMap.getString("lblCurrentPowerMeter.text")); // NOI18N
        lblCurrentPowerMeter.setName("lblCurrentPowerMeter"); // NOI18N

        cmbCurrentPowerMeter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCurrentPowerMeter.setBorder(null);
        cmbCurrentPowerMeter.setName("cmbCurrentPowerMeter"); // NOI18N
        cmbCurrentPowerMeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCurrentPowerMeterActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        txtPhaseToPhaseVoltage1To2.setBackground(resourceMap.getColor("txtPhaseToPhaseVoltage1To2.background")); // NOI18N
        txtPhaseToPhaseVoltage1To2.setEditable(false);
        txtPhaseToPhaseVoltage1To2.setFont(resourceMap.getFont("txtPhaseToPhaseVoltage1To2.font")); // NOI18N
        txtPhaseToPhaseVoltage1To2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPhaseToPhaseVoltage1To2.setText(resourceMap.getString("txtPhaseToPhaseVoltage1To2.text")); // NOI18N
        txtPhaseToPhaseVoltage1To2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPhaseToPhaseVoltage1To2.setName("txtPhaseToPhaseVoltage1To2"); // NOI18N

        txtPhaseToPhaseVoltage2To3.setBackground(resourceMap.getColor("txtPhaseToPhaseVoltage2To3.background")); // NOI18N
        txtPhaseToPhaseVoltage2To3.setEditable(false);
        txtPhaseToPhaseVoltage2To3.setFont(resourceMap.getFont("txtPhaseToPhaseVoltage2To3.font")); // NOI18N
        txtPhaseToPhaseVoltage2To3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPhaseToPhaseVoltage2To3.setText(resourceMap.getString("txtPhaseToPhaseVoltage2To3.text")); // NOI18N
        txtPhaseToPhaseVoltage2To3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPhaseToPhaseVoltage2To3.setName("txtPhaseToPhaseVoltage2To3"); // NOI18N

        txtPhaseToPhaseVoltage3To1.setBackground(resourceMap.getColor("txtPhaseToPhaseVoltage3To1.background")); // NOI18N
        txtPhaseToPhaseVoltage3To1.setEditable(false);
        txtPhaseToPhaseVoltage3To1.setFont(resourceMap.getFont("txtPhaseToPhaseVoltage3To1.font")); // NOI18N
        txtPhaseToPhaseVoltage3To1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPhaseToPhaseVoltage3To1.setText(resourceMap.getString("txtPhaseToPhaseVoltage3To1.text")); // NOI18N
        txtPhaseToPhaseVoltage3To1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPhaseToPhaseVoltage3To1.setName("txtPhaseToPhaseVoltage3To1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPhaseToPhaseVoltage1To2)
                    .addComponent(txtPhaseToPhaseVoltage2To3)
                    .addComponent(txtPhaseToPhaseVoltage3To1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPhaseToPhaseVoltage1To2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPhaseToPhaseVoltage2To3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPhaseToPhaseVoltage3To1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        txtTotalActivePower.setBackground(resourceMap.getColor("txtTotalActivePower.background")); // NOI18N
        txtTotalActivePower.setEditable(false);
        txtTotalActivePower.setFont(resourceMap.getFont("txtTotalActivePower.font")); // NOI18N
        txtTotalActivePower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalActivePower.setText(resourceMap.getString("txtTotalActivePower.text")); // NOI18N
        txtTotalActivePower.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalActivePower.setName("txtTotalActivePower"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        txtTotalReactivePower.setBackground(resourceMap.getColor("txtTotalReactivePower.background")); // NOI18N
        txtTotalReactivePower.setEditable(false);
        txtTotalReactivePower.setFont(resourceMap.getFont("txtTotalReactivePower.font")); // NOI18N
        txtTotalReactivePower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalReactivePower.setText(resourceMap.getString("txtTotalReactivePower.text")); // NOI18N
        txtTotalReactivePower.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalReactivePower.setName("txtTotalReactivePower"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtTotalApparentPower.setBackground(resourceMap.getColor("txtTotalApparentPower.background")); // NOI18N
        txtTotalApparentPower.setEditable(false);
        txtTotalApparentPower.setFont(resourceMap.getFont("txtTotalApparentPower.font")); // NOI18N
        txtTotalApparentPower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalApparentPower.setText(resourceMap.getString("txtTotalApparentPower.text")); // NOI18N
        txtTotalApparentPower.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtTotalApparentPower.setName("txtTotalApparentPower"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTotalReactivePower, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalActivePower, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalApparentPower, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotalActivePower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotalReactivePower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTotalApparentPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblCurrentPowerMeter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCurrentPowerMeter, 0, 371, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentPowerMeter)
                    .addComponent(cmbCurrentPowerMeter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void cmbCurrentPowerMeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCurrentPowerMeterActionPerformed
        IPowerMeter powerMeter = (IPowerMeter) cmbCurrentPowerMeter.getSelectedItem();
        measureViewHandler.setActivePowerMeter(powerMeter);
    }//GEN-LAST:event_cmbCurrentPowerMeterActionPerformed

    /**
     * Agrega el manejador de datos como observador de eventos 
     */
    private void AttachMeasureToDataProcessor() {
        Processor.AddObserver(getMeasureViewHandler().getMeasureObserver());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbCurrentPowerMeter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurrentPowerMeter;
    private javax.swing.JTable measuresTable;
    private javax.swing.JTextField txtPhaseToPhaseVoltage1To2;
    private javax.swing.JTextField txtPhaseToPhaseVoltage2To3;
    private javax.swing.JTextField txtPhaseToPhaseVoltage3To1;
    private javax.swing.JTextField txtTotalActivePower;
    private javax.swing.JTextField txtTotalApparentPower;
    private javax.swing.JTextField txtTotalReactivePower;
    // End of variables declaration//GEN-END:variables
}
