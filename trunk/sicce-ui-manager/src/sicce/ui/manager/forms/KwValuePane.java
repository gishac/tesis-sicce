/*
 * KwValuePane.java
 *
 * Created on October 4, 2008, 5:54 PM
 */

package sicce.ui.manager.forms;


import java.util.Date;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import sicce.api.businesslogic.KwValueBizObject;
import sicce.api.businesslogic.factory.ClassFactory;
import sicce.api.businesslogic.model.KwValueTableModel;
import sicce.api.businesslogic.model.SicceTableModel;
import sicce.api.dataaccess.KwValueDB;
import sicce.api.info.ConstantsProvider.DialogResult;
import sicce.api.info.interfaces.IKwValue;
import sicce.api.util.ComponentUtil;
import sicce.api.util.JTextFieldInteger;
import sicce.api.util.JTextFieldLimit;
import sicce.api.util.Validator;
import sicce.ui.manager.controls.JTabExtended;
import sicce.ui.manager.controls.SearchDialog;
import sicce.ui.manager.handlers.ExceptionHandler;

/**
 *
 * @author  gish@c
 */
public class KwValuePane extends JTabExtended<IKwValue> {
    
    /**
     * Objeto para manejar la logica de los rubros
     */
    private KwValueBizObject kwBizObject;
    
    /**
     * Modelo de tabla para mostrar los valores kw/h existentes
     */
    private KwValueTableModel kwTableModel;
    
    /**
     * Constructor
     */
    public KwValuePane(){
        initComponents();
     //   txtValue1.setDocument(new JTextFieldInteger(0,100));
        getControlsToClear().add(txtValue1);
        getControlsToClear().add(txtValue2);
        getControlsToClear().add(dpStartDate);
        getControlsToClear().add(dpEndDate);
        getControlsToEnable().add(dpStartDate);
        getControlsToEnable().add(dpEndDate);
        getControlsToEnable().add(txtValue1);
        getControlsToEnable().add(txtValue2);
        kwBizObject = new KwValueBizObject();
        FillGrid();
        ComponentUtil.SetState(false, getControlsToEnable());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblStartDate = new javax.swing.JLabel();
        dpStartDate = new com.toedter.calendar.JDateChooser();
        lblEndDate = new javax.swing.JLabel();
        dpEndDate = new com.toedter.calendar.JDateChooser();
        lblValue = new javax.swing.JLabel();
        txtValue1 = new javax.swing.JTextField();
        lblValue1 = new javax.swing.JLabel();
        txtValue2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridKwValues = new javax.swing.JTable();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sicce.ui.manager.forms.SicceuimanagerApp.class).getContext().getResourceMap(KwValuePane.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        lblStartDate.setText(resourceMap.getString("lblStartDate.text")); // NOI18N
        lblStartDate.setName("lblStartDate"); // NOI18N

        dpStartDate.setEnabled(false);
        dpStartDate.setName("dpStartDate"); // NOI18N

        lblEndDate.setText(resourceMap.getString("lblEndDate.text")); // NOI18N
        lblEndDate.setName("lblEndDate"); // NOI18N

        dpEndDate.setEnabled(false);
        dpEndDate.setName("dpEndDate"); // NOI18N

        lblValue.setText(resourceMap.getString("lblValue.text")); // NOI18N
        lblValue.setName("lblValue"); // NOI18N

        txtValue1.setEnabled(false);
        txtValue1.setName("txtValue1"); // NOI18N

        lblValue1.setText(resourceMap.getString("lblValue1.text")); // NOI18N
        lblValue1.setName("lblValue1"); // NOI18N

        txtValue2.setEnabled(false);
        txtValue2.setName("txtValue2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblValue)
                    .addComponent(lblValue1)
                    .addComponent(lblStartDate)
                    .addComponent(lblEndDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpEndDate, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(dpStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(txtValue2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(txtValue1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addContainerGap(114, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStartDate)
                    .addComponent(dpStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEndDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblValue)
                    .addComponent(txtValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValue1))
                .addContainerGap(316, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        gridKwValues.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        gridKwValues.setName("gridKwValues"); // NOI18N
        jScrollPane1.setViewportView(gridKwValues);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dpEndDate;
    private com.toedter.calendar.JDateChooser dpStartDate;
    private javax.swing.JTable gridKwValues;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblValue;
    private javax.swing.JLabel lblValue1;
    private javax.swing.JTextField txtValue1;
    private javax.swing.JTextField txtValue2;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public boolean Delete() throws Exception {
        cancelAction = false;
        try {
            KwValueDB.Delete(currentObject);
            super.Delete();
            FillGrid();

        } catch (Exception ex) {
            cancelAction = true;
            throw ex;
        }
        return cancelAction;
    }

    @Override
    public void New() {
        super.New();
        currentObject = ClassFactory.getkwValueInstance();
        dpStartDate.requestFocusInWindow();
    }

    @Override
    public boolean Save() throws Exception {
        super.Save();
        cancelAction = false;
        if (!CheckFields()) {
            return true;
        }
        try {
            currentObject.setKwValue1(Double.parseDouble(txtValue1.getText()));
            currentObject.setKwValue2(Double.parseDouble(txtValue2.getText()));
            Date date = dpStartDate.getDate();
            date.setHours(0);
            date.setMinutes(0);
            date.setSeconds(0);
            currentObject.setStartDate(date);
            date = dpEndDate.getDate();
            date.setHours(0);
            date.setMinutes(0);
            date.setSeconds(0);
            currentObject.setEndDate(date);
            if (IsObjectLoaded()) {
                return Update();
            }
            KwValueDB.Save(currentObject);
            FillGrid();
        } catch (Exception ex) {
            ExceptionHandler.DisplayException(ex);
            cancelAction = true;
        }
        return cancelAction;
    }

    @Override
    public DialogResult Search() {
        SearchDialog<IKwValue> searchRolesDialog = new SearchDialog<IKwValue>(new JFrame(), true, new KwValueTableModel(kwBizObject.GetAllKwValues()));
        searchRolesDialog.setVisible(true);
        DialogResult result = searchRolesDialog.getDialogResult();
        if (result == DialogResult.Ok) {
            currentObject = searchRolesDialog.getSearchResult();
            SetUIElements();
        }
        return result;
    }

    @Override
    public boolean Update() throws Exception {
        cancelAction = false;
        try {
            KwValueDB.Update(currentObject);
            FillGrid();
        } catch (Exception ex) {
            cancelAction = true;
        }
        return cancelAction;
    }

    @Override
    public void ItemSelected(int selectedIndex) {
        super.ItemSelected(selectedIndex);
        SicceTableModel<IKwValue> tableModel = (SicceTableModel<IKwValue>) gridKwValues.getModel();
        currentObject = tableModel.getRow(selectedIndex);
        SetUIElements();
    }

    @Override
    public void RegisterSelectionListener() {
        gridKwValues.getSelectionModel().addListSelectionListener(selectionListener);
        gridKwValues.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    @Override
    public void SetUIElements() {
        if (currentObject == null) {
            return;
        }
        txtValue1.setText(currentObject.getKwValue1() != null? currentObject.getKwValue1().toString() : "");
        txtValue2.setText(currentObject.getKwValue2() != null? currentObject.getKwValue2().toString() : "");
        dpStartDate.setDate(currentObject.getStartDate());
        dpEndDate.setDate(currentObject.getEndDate());
    }

    @Override
    public void CancelSave() {
        if (currentObject != null) {
            if (currentObject.getIdKwValue() == null) {
                this.currentObject = ClassFactory.getkwValueInstance();
            }
        }
    }

    @Override
    public void FillGrid() {
        kwTableModel = new KwValueTableModel(kwBizObject.GetAllKwValues());
        gridKwValues.setModel(kwTableModel);
    }

    @Override
    public boolean CheckFields() {        
        if (dpEndDate.getDate().compareTo(dpStartDate.getDate()) <= 0) {
            ExceptionHandler.DisplayWarning("La fecha final del rubro debe ser mayor a la fecha inicial");
            return false;
        }
        return true;
    }
}
