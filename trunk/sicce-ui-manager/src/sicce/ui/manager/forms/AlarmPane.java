/*
 * AlarmPane.java
 *
 * Created on May 12, 2008, 9:48 PM
 */
package sicce.ui.manager.forms;

import java.util.Calendar;
import sicce.api.businesslogic.factory.ClassFactory;
import sicce.api.businesslogic.PowerMeterBizObject;
import sicce.api.businesslogic.model.PowerMeterTableModelForAlarms;
import sicce.api.businesslogic.UserBizObject;
import sicce.api.businesslogic.model.UserTableModelForAlarms;
import sicce.api.dataaccess.AlarmDB;
import sicce.api.dataaccess.ScheduledDayDB;
import sicce.api.info.interfaces.IAlarm;
import sicce.api.info.interfaces.IScheduleDay;
import sicce.api.util.ComponentUtil;
import sicce.api.util.JTextFieldLimit;
import sicce.api.util.Validator;
import sicce.ui.manager.controls.JTabExtended;
import sicce.ui.manager.handlers.ExceptionHandler;

/**
 *
 * @author  gish@c
 */
public class AlarmPane extends JTabExtended<IAlarm> {

    private PowerMeterTableModelForAlarms powerMeterTableModel;
    private UserTableModelForAlarms userTableModel;
    private PowerMeterBizObject powerMeterBizObject;
    private UserBizObject userBizObject;

    /** Creates new form AlarmPane */
    public AlarmPane() {
        initComponents();
        txtDescription.setDocument(new JTextFieldLimit(254));
        getControlsToClear().add(txtDescription);
        getControlsToClear().add(txtKwMax);
        getControlsToClear().add(cmbStartTime);
        getControlsToClear().add(cmbEndTime);
        getControlsToClear().add(cmbAlarmType);
        getControlsToClear().add(chkMonday);
        getControlsToClear().add(chkTuesday);
        getControlsToClear().add(chkWednesday);
        getControlsToClear().add(chkThursday);
        getControlsToClear().add(chkFriday);
        getControlsToClear().add(chkSaturday);
        getControlsToClear().add(chkSunday);
        getControlsToEnable().add(txtDescription);
        getControlsToEnable().add(txtKwMax);
        getControlsToEnable().add(cmbStartTime);
        getControlsToEnable().add(cmbEndTime);
        getControlsToEnable().add(cmbAlarmType);
        getControlsToEnable().add(gridPowerMeters);
        getControlsToEnable().add(gridUsers);
        getControlsToEnable().add(chkMonday);
        getControlsToEnable().add(chkTuesday);
        getControlsToEnable().add(chkWednesday);
        getControlsToEnable().add(chkThursday);
        getControlsToEnable().add(chkFriday);
        getControlsToEnable().add(chkSaturday);
        getControlsToEnable().add(chkSunday);
        powerMeterBizObject = new PowerMeterBizObject();
        userBizObject = new UserBizObject();
        FillPowerMetersGrid();
        FillUsersGrid();
        ComponentUtil.SetState(false, getControlsToEnable());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        lblAlarmType = new javax.swing.JLabel();
        cmbAlarmType = new javax.swing.JComboBox();
        lblKwMax = new javax.swing.JLabel();
        txtKwMax = new javax.swing.JTextField();
        lblStartTime = new javax.swing.JLabel();
        cmbStartTime = new javax.swing.JComboBox();
        lblEndTime = new javax.swing.JLabel();
        cmbEndTime = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        chkMonday = new javax.swing.JCheckBox();
        chkThursday = new javax.swing.JCheckBox();
        chkSaturday = new javax.swing.JCheckBox();
        chkTuesday = new javax.swing.JCheckBox();
        chkWednesday = new javax.swing.JCheckBox();
        chkFriday = new javax.swing.JCheckBox();
        chkSunday = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridPowerMeters = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        gridUsers = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sicce.ui.manager.forms.SicceuimanagerApp.class).getContext().getResourceMap(AlarmPane.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        lblDescription.setText(resourceMap.getString("lblDescription.text")); // NOI18N
        lblDescription.setName("lblDescription"); // NOI18N

        txtDescription.setText(resourceMap.getString("txtDescription.text")); // NOI18N
        txtDescription.setName("txtDescription"); // NOI18N

        lblAlarmType.setText(resourceMap.getString("lblAlarmType.text")); // NOI18N
        lblAlarmType.setName("lblAlarmType"); // NOI18N

        cmbAlarmType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sms", "Mail" }));
        cmbAlarmType.setName("cmbType"); // NOI18N

        lblKwMax.setText(resourceMap.getString("lblKwMax.text")); // NOI18N
        lblKwMax.setName("lblKwMax"); // NOI18N

        txtKwMax.setText(resourceMap.getString("txtKwMax.text")); // NOI18N
        txtKwMax.setName("txtKwMax"); // NOI18N

        lblStartTime.setText(resourceMap.getString("lblStartTime.text")); // NOI18N
        lblStartTime.setName("lblStartTime"); // NOI18N

        cmbStartTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        cmbStartTime.setName("cmbStartTime"); // NOI18N

        lblEndTime.setText(resourceMap.getString("lblEndTime.text")); // NOI18N
        lblEndTime.setName("lblEndTime"); // NOI18N

        cmbEndTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "19", "20", "21", "22", "23" }));
        cmbEndTime.setName("cmbEndTime"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        chkMonday.setText(resourceMap.getString("chkMonday.text")); // NOI18N
        chkMonday.setName("chkMonday"); // NOI18N

        chkThursday.setText(resourceMap.getString("chkThursday.text")); // NOI18N
        chkThursday.setName("chkThursday"); // NOI18N

        chkSaturday.setText(resourceMap.getString("chkSaturday.text")); // NOI18N
        chkSaturday.setName("chkSaturday"); // NOI18N

        chkTuesday.setText(resourceMap.getString("chkTuesday.text")); // NOI18N
        chkTuesday.setName("chkTuesday"); // NOI18N

        chkWednesday.setText(resourceMap.getString("chkWednesday.text")); // NOI18N
        chkWednesday.setName("chkWednesday"); // NOI18N

        chkFriday.setText(resourceMap.getString("chkFriday.text")); // NOI18N
        chkFriday.setName("chkFriday"); // NOI18N

        chkSunday.setText(resourceMap.getString("chkSunday.text")); // NOI18N
        chkSunday.setName("chkSunday"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkSunday)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkThursday)
                            .addComponent(chkMonday))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkFriday)
                            .addComponent(chkTuesday))
                        .addGap(29, 29, 29)))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkSaturday)
                    .addComponent(chkWednesday))
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTuesday)
                    .addComponent(chkWednesday)
                    .addComponent(chkMonday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkThursday)
                    .addComponent(chkFriday)
                    .addComponent(chkSaturday))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSunday)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane2.border.title"))); // NOI18N
        jScrollPane2.setName("jScrollPane2"); // NOI18N

        gridPowerMeters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        gridPowerMeters.setName("gridPowerMeters"); // NOI18N
        jScrollPane2.setViewportView(gridPowerMeters);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane3.border.title"))); // NOI18N
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        gridUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        gridUsers.setName("gridUsers"); // NOI18N
        jScrollPane3.setViewportView(gridUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKwMax)
                                    .addComponent(lblStartTime)
                                    .addComponent(lblDescription)
                                    .addComponent(lblAlarmType)
                                    .addComponent(lblEndTime))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbEndTime, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDescription, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbAlarmType, javax.swing.GroupLayout.Alignment.LEADING, 0, 255, Short.MAX_VALUE)
                                    .addComponent(txtKwMax, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbStartTime, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(370, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescription)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlarmType)
                    .addComponent(cmbAlarmType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKwMax)
                    .addComponent(txtKwMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartTime)
                    .addComponent(cmbStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEndTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkFriday;
    private javax.swing.JCheckBox chkMonday;
    private javax.swing.JCheckBox chkSaturday;
    private javax.swing.JCheckBox chkSunday;
    private javax.swing.JCheckBox chkThursday;
    private javax.swing.JCheckBox chkTuesday;
    private javax.swing.JCheckBox chkWednesday;
    private javax.swing.JComboBox cmbAlarmType;
    private javax.swing.JComboBox cmbEndTime;
    private javax.swing.JComboBox cmbStartTime;
    private javax.swing.JTable gridPowerMeters;
    private javax.swing.JTable gridUsers;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAlarmType;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEndTime;
    private javax.swing.JLabel lblKwMax;
    private javax.swing.JLabel lblStartTime;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtKwMax;
    // End of variables declaration//GEN-END:variables
    @Override
    public void New() {
        super.New();
        currentObject = ClassFactory.getAlarmInstance();
        txtDescription.requestFocusInWindow();
        FillPowerMetersGrid();
        FillUsersGrid();
    }

    /**
     * 
     */
    private void FillPowerMetersGrid() {
        powerMeterTableModel = null;
        powerMeterTableModel = new PowerMeterTableModelForAlarms(powerMeterBizObject.GetAllPowerMeter(), currentObject);
        gridPowerMeters.setModel(powerMeterTableModel);
        gridPowerMeters.setEnabled(true);
    }

    /**
     * 
     */
    private void FillUsersGrid() {
        userTableModel = null;
        userTableModel = new UserTableModelForAlarms(userBizObject.GetAllUsers(), currentObject);
        gridUsers.setModel(userTableModel);
        gridUsers.setEnabled(true);

    }

    @Override
    public boolean CheckFields() {
        if (!Validator.ValidateField(null, null, 0, txtDescription, true, "la descripción de la alarma", 5)) {
            return false;
        }
        if (!Validator.ValidateField(null, null, 0, txtKwMax, true, "el maximo de kw/h permitidos", 1)) {
            return false;
        }
        return true;
    }

    @Override
    public boolean Save() throws Exception {
        super.Save();
        cancelAction = false;
        if (!CheckFields()) {
            return true;
        }
        try {
            currentObject.setDescription(txtDescription.getText().trim());
            currentObject.setAlarmType(cmbAlarmType.getSelectedIndex());
            currentObject.setMaxValueAllowed(Integer.parseInt(txtKwMax.getText().trim()));
            SetScheduledDays(currentObject);
            if (IsObjectLoaded()) {
                return Update();
            }
            AlarmDB.Save(currentObject);
            ScheduledDayDB.Save(currentObject.getScheduledDays());
            FillGrid();
        } catch (Exception ex) {
            ExceptionHandler.DisplayException(ex);
            cancelAction = true;
        }
        return cancelAction;
    }

    /**
     * 
     * @param alarm
     */
    public void SetScheduledDays(IAlarm alarm) {
        SetScheduledDay(alarm, chkMonday.isSelected(), Calendar.MONDAY);
        SetScheduledDay(alarm, chkTuesday.isSelected(), Calendar.TUESDAY);
        SetScheduledDay(alarm, chkWednesday.isSelected(), Calendar.WEDNESDAY);
        SetScheduledDay(alarm, chkThursday.isSelected(), Calendar.THURSDAY);
        SetScheduledDay(alarm, chkFriday.isSelected(), Calendar.FRIDAY);
        SetScheduledDay(alarm, chkSaturday.isSelected(), Calendar.SATURDAY);
        SetScheduledDay(alarm, chkSunday.isSelected(), Calendar.SUNDAY);
    }

    /**
     * 
     * @param alarm
     * @param checked
     * @param day
     */
    public void SetScheduledDay(IAlarm alarm, boolean checked, int day) {
        if (checked) {
            IScheduleDay scheduledDay = ClassFactory.getScheduleInstance();
            scheduledDay.setDayScheduled(day);
            scheduledDay.setStartTime(Integer.parseInt(cmbStartTime.getSelectedItem().toString()));
            scheduledDay.setEndTime(Integer.parseInt(cmbEndTime.getSelectedItem().toString()));
            alarm.getScheduledDays().add(scheduledDay);
            scheduledDay.setAlarm(currentObject);
        }
    }
}
