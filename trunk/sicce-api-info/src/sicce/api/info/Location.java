package sicce.api.info;

// Generated by MyEclipse Persistence Tools
import java.util.Set;

import sicce.api.info.auto.AbstractLocation;
import sicce.api.info.interfaces.ILocation;
import sicce.api.info.interfaces.IMeasure;
import sicce.api.info.interfaces.IPowerMeter;
import sicce.api.info.interfaces.IZone;

/**
 * Representacion de las dependencias para organizar la division de los sectores y la ubicacion de los medidores
 * @author gish@c
 */
public class Location extends AbstractLocation implements java.io.Serializable {

    // Constructors
    
    
    /**
     * Constructor
     */
    public Location() {
    }

    /**
     * Constructor
     * @param idLocation Identificador de la dependencia
     * @param locationType Tipo de dependenca
     * @param location Ubicacion de la dependencia
     * @param powerMeter Medidor asignado a la dependencia
     * @param description Descripcion de la dependencia
     */
    public Location(Integer idLocation, LocationType locationType,
            ILocation location, IPowerMeter powerMeter, String description) {
        super(idLocation, locationType, location, powerMeter, description);
    }

    /**
     * Constructor
     * @param idLocation Identificador de la dependencia
     * @param locationType Tipo de dependencia
     * @param location Ubicacion de la dependencia
     * @param powerMeter Medidor asignado a la dependencia
     * @param description Descripcion de la dependencia
     * @param locations Dependencias agrupadas dentro de esta ubicacion
     * @param zones Zonas logicas que agrupan a la dependencia
     * @param measures Mediciones realizadas sobre la dependencia
     */
    public Location(Integer idLocation, LocationType locationType,
            ILocation location, IPowerMeter powerMeter, String description, Set<ILocation> locations, Set<IZone> zones,
            Set<IMeasure> measures) {
        super(idLocation, locationType, location, powerMeter, description,
                locations, zones, measures);
    }
}
