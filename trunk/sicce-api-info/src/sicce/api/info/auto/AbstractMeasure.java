package sicce.api.info.auto;

import java.util.Date;

import sicce.api.info.interfaces.ILocation;
import sicce.api.info.interfaces.IMeasure;
import sicce.api.info.interfaces.IPowerMeter;

/**
 * AbstractMeasure generated by MyEclipse Persistence Tools
 */

public abstract class AbstractMeasure implements java.io.Serializable, IMeasure {

	protected Integer idMeasure;
	protected IPowerMeter powerMeter;
	protected ILocation location;
	protected Date dateMeasure;
	protected Double instantaneousCurrentPhase1;
	protected Double instantaneousCurrentPhase2;
	protected Double instantaneousCurrentPhase3;
	protected Double neutralCurrent;
	protected Double phaseToPhaseVoltagePhase1To2;
	protected Double phaseToPhaseVoltagePhase2To3;
	protected Double phaseToPhaseVoltagePhase3To1;
	protected Double phaseToNeutralVoltagePhase1;
	protected Double phaseToNeutralVoltagePhase2;
	protected Double phaseToNeutralVoltagePhase3;
	protected Double frequency;
	protected Double totalActivePower;
	protected Double totalReactivePower;
	protected Double totalApparentPower;
	protected Double activePowerPhase1;
	protected Double activePowerPhase2;
	protected Double activePowerPhase3;
	protected Double reactivePowerPhase1;
	protected Double reactivePowerPhase2;
	protected Double reactivePowerPhase3;
	protected Double apparentPowerPhase1;
	protected Double apparentPowerPhase2;
	protected Double apparentPowerPhase3;
	protected Double demandCurrentPhase1;
	protected Double demandCurrentPhase2;
	protected Double demandCurrentPhase3;
	protected Double puissanceApparenteMoyenneTotale;
	protected Double maximumDemandCurrentPhase1;
	protected Double maximumDemandCurrentPhase2;
	protected Double maximumDemandCurrentPhase3;
	protected Double maximumDemandActivePowerPlus;
	protected Double maximumDemandActivePowerMinus;
	protected Double maximumDemandReactivePowerPlus;
	protected Double maximumDemandReactivePowerMinus;
	protected Double maximumDemandApparentPower;
	protected Double operatingTimeCounter;
	protected Double activeEnergyInPlus;
	protected Double reactiveEnergyInPlus;
	protected Double apparentEnergy;
	protected Double activeEnergyOutMinus;
	protected Double reactiveEnergyOutMinus;
	protected Double input1PulseCounter;

	// Constructors

	/** default constructor */
	public AbstractMeasure() {
	}

	/** minimal constructor */
	public AbstractMeasure(Integer idMeasure, IPowerMeter powerMeter,
			ILocation location, Double instantaneousCurrentPhase1,
			Double instantaneousCurrentPhase2,
			Double instantaneousCurrentPhase3, Double neutralCurrent,
			Double phaseToPhaseVoltagePhase1To2,
			Double phaseToPhaseVoltagePhase2To3,
			Double phaseToPhaseVoltagePhase3To1,
			Double phaseToNeutralVoltagePhase1,
			Double phaseToNeutralVoltagePhase2,
			Double phaseToNeutralVoltagePhase3, Double frequency,
			Double totalActivePower, Double totalReactivePower,
			Double totalApparentPower, Double activePowerPhase1,
			Double activePowerPhase2, Double activePowerPhase3,
			Double reactivePowerPhase1, Double reactivePowerPhase2,
			Double reactivePowerPhase3, Double apparentPowerPhase1,
			Double apparentPowerPhase2, Double apparentPowerPhase3,
			Double demandCurrentPhase1, Double demandCurrentPhase2,
			Double demandCurrentPhase3, Double puissanceApparenteMoyenneTotale,
			Double maximumDemandCurrentPhase1,
			Double maximumDemandCurrentPhase2,
			Double maximumDemandCurrentPhase3,
			Double maximumDemandActivePowerPlus,
			Double maximumDemandActivePowerMinus,
			Double maximumDemandReactivePowerPlus,
			Double maximumDemandReactivePowerMinus,
			Double maximumDemandApparentPower, Double operatingTimeCounter,
			Double activeEnergyInPlus, Double reactiveEnergyInPlus,
			Double apparentEnergy, Double activeEnergyOutMinus,
			Double reactiveEnergyOutMinus, Double input1PulseCounter) {
		this.idMeasure = idMeasure;
		this.powerMeter = powerMeter;
		this.location = location;
		this.instantaneousCurrentPhase1 = instantaneousCurrentPhase1;
		this.instantaneousCurrentPhase2 = instantaneousCurrentPhase2;
		this.instantaneousCurrentPhase3 = instantaneousCurrentPhase3;
		this.neutralCurrent = neutralCurrent;
		this.phaseToPhaseVoltagePhase1To2 = phaseToPhaseVoltagePhase1To2;
		this.phaseToPhaseVoltagePhase2To3 = phaseToPhaseVoltagePhase2To3;
		this.phaseToPhaseVoltagePhase3To1 = phaseToPhaseVoltagePhase3To1;
		this.phaseToNeutralVoltagePhase1 = phaseToNeutralVoltagePhase1;
		this.phaseToNeutralVoltagePhase2 = phaseToNeutralVoltagePhase2;
		this.phaseToNeutralVoltagePhase3 = phaseToNeutralVoltagePhase3;
		this.frequency = frequency;
		this.totalActivePower = totalActivePower;
		this.totalReactivePower = totalReactivePower;
		this.totalApparentPower = totalApparentPower;
		this.activePowerPhase1 = activePowerPhase1;
		this.activePowerPhase2 = activePowerPhase2;
		this.activePowerPhase3 = activePowerPhase3;
		this.reactivePowerPhase1 = reactivePowerPhase1;
		this.reactivePowerPhase2 = reactivePowerPhase2;
		this.reactivePowerPhase3 = reactivePowerPhase3;
		this.apparentPowerPhase1 = apparentPowerPhase1;
		this.apparentPowerPhase2 = apparentPowerPhase2;
		this.apparentPowerPhase3 = apparentPowerPhase3;
		this.demandCurrentPhase1 = demandCurrentPhase1;
		this.demandCurrentPhase2 = demandCurrentPhase2;
		this.demandCurrentPhase3 = demandCurrentPhase3;
		this.puissanceApparenteMoyenneTotale = puissanceApparenteMoyenneTotale;
		this.maximumDemandCurrentPhase1 = maximumDemandCurrentPhase1;
		this.maximumDemandCurrentPhase2 = maximumDemandCurrentPhase2;
		this.maximumDemandCurrentPhase3 = maximumDemandCurrentPhase3;
		this.maximumDemandActivePowerPlus = maximumDemandActivePowerPlus;
		this.maximumDemandActivePowerMinus = maximumDemandActivePowerMinus;
		this.maximumDemandReactivePowerPlus = maximumDemandReactivePowerPlus;
		this.maximumDemandReactivePowerMinus = maximumDemandReactivePowerMinus;
		this.maximumDemandApparentPower = maximumDemandApparentPower;
		this.operatingTimeCounter = operatingTimeCounter;
		this.activeEnergyInPlus = activeEnergyInPlus;
		this.reactiveEnergyInPlus = reactiveEnergyInPlus;
		this.apparentEnergy = apparentEnergy;
		this.activeEnergyOutMinus = activeEnergyOutMinus;
		this.reactiveEnergyOutMinus = reactiveEnergyOutMinus;
		this.input1PulseCounter = input1PulseCounter;
	}

	/** full constructor */
	public AbstractMeasure(Integer idMeasure, IPowerMeter powerMeter,
			ILocation location, Date dateMeasure,
			Double instantaneousCurrentPhase1,
			Double instantaneousCurrentPhase2,
			Double instantaneousCurrentPhase3, Double neutralCurrent,
			Double phaseToPhaseVoltagePhase1To2,
			Double phaseToPhaseVoltagePhase2To3,
			Double phaseToPhaseVoltagePhase3To1,
			Double phaseToNeutralVoltagePhase1,
			Double phaseToNeutralVoltagePhase2,
			Double phaseToNeutralVoltagePhase3, Double frequency,
			Double totalActivePower, Double totalReactivePower,
			Double totalApparentPower, Double activePowerPhase1,
			Double activePowerPhase2, Double activePowerPhase3,
			Double reactivePowerPhase1, Double reactivePowerPhase2,
			Double reactivePowerPhase3, Double apparentPowerPhase1,
			Double apparentPowerPhase2, Double apparentPowerPhase3,
			Double demandCurrentPhase1, Double demandCurrentPhase2,
			Double demandCurrentPhase3, Double puissanceApparenteMoyenneTotale,
			Double maximumDemandCurrentPhase1,
			Double maximumDemandCurrentPhase2,
			Double maximumDemandCurrentPhase3,
			Double maximumDemandActivePowerPlus,
			Double maximumDemandActivePowerMinus,
			Double maximumDemandReactivePowerPlus,
			Double maximumDemandReactivePowerMinus,
			Double maximumDemandApparentPower, Double operatingTimeCounter,
			Double activeEnergyInPlus, Double reactiveEnergyInPlus,
			Double apparentEnergy, Double activeEnergyOutMinus,
			Double reactiveEnergyOutMinus, Double input1PulseCounter) {
		this.idMeasure = idMeasure;
		this.powerMeter = powerMeter;
		this.location = location;
		this.dateMeasure = dateMeasure;
		this.instantaneousCurrentPhase1 = instantaneousCurrentPhase1;
		this.instantaneousCurrentPhase2 = instantaneousCurrentPhase2;
		this.instantaneousCurrentPhase3 = instantaneousCurrentPhase3;
		this.neutralCurrent = neutralCurrent;
		this.phaseToPhaseVoltagePhase1To2 = phaseToPhaseVoltagePhase1To2;
		this.phaseToPhaseVoltagePhase2To3 = phaseToPhaseVoltagePhase2To3;
		this.phaseToPhaseVoltagePhase3To1 = phaseToPhaseVoltagePhase3To1;
		this.phaseToNeutralVoltagePhase1 = phaseToNeutralVoltagePhase1;
		this.phaseToNeutralVoltagePhase2 = phaseToNeutralVoltagePhase2;
		this.phaseToNeutralVoltagePhase3 = phaseToNeutralVoltagePhase3;
		this.frequency = frequency;
		this.totalActivePower = totalActivePower;
		this.totalReactivePower = totalReactivePower;
		this.totalApparentPower = totalApparentPower;
		this.activePowerPhase1 = activePowerPhase1;
		this.activePowerPhase2 = activePowerPhase2;
		this.activePowerPhase3 = activePowerPhase3;
		this.reactivePowerPhase1 = reactivePowerPhase1;
		this.reactivePowerPhase2 = reactivePowerPhase2;
		this.reactivePowerPhase3 = reactivePowerPhase3;
		this.apparentPowerPhase1 = apparentPowerPhase1;
		this.apparentPowerPhase2 = apparentPowerPhase2;
		this.apparentPowerPhase3 = apparentPowerPhase3;
		this.demandCurrentPhase1 = demandCurrentPhase1;
		this.demandCurrentPhase2 = demandCurrentPhase2;
		this.demandCurrentPhase3 = demandCurrentPhase3;
		this.puissanceApparenteMoyenneTotale = puissanceApparenteMoyenneTotale;
		this.maximumDemandCurrentPhase1 = maximumDemandCurrentPhase1;
		this.maximumDemandCurrentPhase2 = maximumDemandCurrentPhase2;
		this.maximumDemandCurrentPhase3 = maximumDemandCurrentPhase3;
		this.maximumDemandActivePowerPlus = maximumDemandActivePowerPlus;
		this.maximumDemandActivePowerMinus = maximumDemandActivePowerMinus;
		this.maximumDemandReactivePowerPlus = maximumDemandReactivePowerPlus;
		this.maximumDemandReactivePowerMinus = maximumDemandReactivePowerMinus;
		this.maximumDemandApparentPower = maximumDemandApparentPower;
		this.operatingTimeCounter = operatingTimeCounter;
		this.activeEnergyInPlus = activeEnergyInPlus;
		this.reactiveEnergyInPlus = reactiveEnergyInPlus;
		this.apparentEnergy = apparentEnergy;
		this.activeEnergyOutMinus = activeEnergyOutMinus;
		this.reactiveEnergyOutMinus = reactiveEnergyOutMinus;
		this.input1PulseCounter = input1PulseCounter;
	}

	// Property accessors

	public Integer getIdMeasure() {
		return this.idMeasure;
	}

	public void setIdMeasure(Integer idMeasure) {
		this.idMeasure = idMeasure;
	}

	public IPowerMeter getPowerMeter() {
		return this.powerMeter;
	}

	public void setPowerMeter(IPowerMeter powerMeter) {
		this.powerMeter = powerMeter;
	}

	public ILocation getLocation() {
		return this.location;
	}

	public void setLocation(ILocation location) {
		this.location = location;
	}

	public Date getDateMeasure() {
		return this.dateMeasure;
	}

	public void setDateMeasure(Date dateMeasure) {
		this.dateMeasure = dateMeasure;
	}

	public Double getInstantaneousCurrentPhase1() {
		return this.instantaneousCurrentPhase1;
	}

	public void setInstantaneousCurrentPhase1(Double instantaneousCurrentPhase1) {
		this.instantaneousCurrentPhase1 = instantaneousCurrentPhase1;
	}

	public Double getInstantaneousCurrentPhase2() {
		return this.instantaneousCurrentPhase2;
	}

	public void setInstantaneousCurrentPhase2(Double instantaneousCurrentPhase2) {
		this.instantaneousCurrentPhase2 = instantaneousCurrentPhase2;
	}

	public Double getInstantaneousCurrentPhase3() {
		return this.instantaneousCurrentPhase3;
	}

	public void setInstantaneousCurrentPhase3(Double instantaneousCurrentPhase3) {
		this.instantaneousCurrentPhase3 = instantaneousCurrentPhase3;
	}

	public Double getNeutralCurrent() {
		return this.neutralCurrent;
	}

	public void setNeutralCurrent(Double neutralCurrent) {
		this.neutralCurrent = neutralCurrent;
	}

	public Double getPhaseToPhaseVoltagePhase1To2() {
		return this.phaseToPhaseVoltagePhase1To2;
	}

	public void setPhaseToPhaseVoltagePhase1To2(
			Double phaseToPhaseVoltagePhase1To2) {
		this.phaseToPhaseVoltagePhase1To2 = phaseToPhaseVoltagePhase1To2;
	}

	public Double getPhaseToPhaseVoltagePhase2To3() {
		return this.phaseToPhaseVoltagePhase2To3;
	}

	public void setPhaseToPhaseVoltagePhase2To3(
			Double phaseToPhaseVoltagePhase2To3) {
		this.phaseToPhaseVoltagePhase2To3 = phaseToPhaseVoltagePhase2To3;
	}

	public Double getPhaseToPhaseVoltagePhase3To1() {
		return this.phaseToPhaseVoltagePhase3To1;
	}

	public void setPhaseToPhaseVoltagePhase3To1(
			Double phaseToPhaseVoltagePhase3To1) {
		this.phaseToPhaseVoltagePhase3To1 = phaseToPhaseVoltagePhase3To1;
	}

	public Double getPhaseToNeutralVoltagePhase1() {
		return this.phaseToNeutralVoltagePhase1;
	}

	public void setPhaseToNeutralVoltagePhase1(
			Double phaseToNeutralVoltagePhase1) {
		this.phaseToNeutralVoltagePhase1 = phaseToNeutralVoltagePhase1;
	}

	public Double getPhaseToNeutralVoltagePhase2() {
		return this.phaseToNeutralVoltagePhase2;
	}

	public void setPhaseToNeutralVoltagePhase2(
			Double phaseToNeutralVoltagePhase2) {
		this.phaseToNeutralVoltagePhase2 = phaseToNeutralVoltagePhase2;
	}

	public Double getPhaseToNeutralVoltagePhase3() {
		return this.phaseToNeutralVoltagePhase3;
	}

	public void setPhaseToNeutralVoltagePhase3(
			Double phaseToNeutralVoltagePhase3) {
		this.phaseToNeutralVoltagePhase3 = phaseToNeutralVoltagePhase3;
	}

	public Double getFrequency() {
		return this.frequency;
	}

	public void setFrequency(Double frequency) {
		this.frequency = frequency;
	}

	public Double getTotalActivePower() {
		return this.totalActivePower;
	}

	public void setTotalActivePower(Double totalActivePower) {
		this.totalActivePower = totalActivePower;
	}

	public Double getTotalReactivePower() {
		return this.totalReactivePower;
	}

	public void setTotalReactivePower(Double totalReactivePower) {
		this.totalReactivePower = totalReactivePower;
	}

	public Double getTotalApparentPower() {
		return this.totalApparentPower;
	}

	public void setTotalApparentPower(Double totalApparentPower) {
		this.totalApparentPower = totalApparentPower;
	}

	public Double getActivePowerPhase1() {
		return this.activePowerPhase1;
	}

	public void setActivePowerPhase1(Double activePowerPhase1) {
		this.activePowerPhase1 = activePowerPhase1;
	}

	public Double getActivePowerPhase2() {
		return this.activePowerPhase2;
	}

	public void setActivePowerPhase2(Double activePowerPhase2) {
		this.activePowerPhase2 = activePowerPhase2;
	}

	public Double getActivePowerPhase3() {
		return this.activePowerPhase3;
	}

	public void setActivePowerPhase3(Double activePowerPhase3) {
		this.activePowerPhase3 = activePowerPhase3;
	}

	public Double getReactivePowerPhase1() {
		return this.reactivePowerPhase1;
	}

	public void setReactivePowerPhase1(Double reactivePowerPhase1) {
		this.reactivePowerPhase1 = reactivePowerPhase1;
	}

	public Double getReactivePowerPhase2() {
		return this.reactivePowerPhase2;
	}

	public void setReactivePowerPhase2(Double reactivePowerPhase2) {
		this.reactivePowerPhase2 = reactivePowerPhase2;
	}

	public Double getReactivePowerPhase3() {
		return this.reactivePowerPhase3;
	}

	public void setReactivePowerPhase3(Double reactivePowerPhase3) {
		this.reactivePowerPhase3 = reactivePowerPhase3;
	}

	public Double getApparentPowerPhase1() {
		return this.apparentPowerPhase1;
	}

	public void setApparentPowerPhase1(Double apparentPowerPhase1) {
		this.apparentPowerPhase1 = apparentPowerPhase1;
	}

	public Double getApparentPowerPhase2() {
		return this.apparentPowerPhase2;
	}

	public void setApparentPowerPhase2(Double apparentPowerPhase2) {
		this.apparentPowerPhase2 = apparentPowerPhase2;
	}

	public Double getApparentPowerPhase3() {
		return this.apparentPowerPhase3;
	}

	public void setApparentPowerPhase3(Double apparentPowerPhase3) {
		this.apparentPowerPhase3 = apparentPowerPhase3;
	}

	public Double getDemandCurrentPhase1() {
		return this.demandCurrentPhase1;
	}

	public void setDemandCurrentPhase1(Double demandCurrentPhase1) {
		this.demandCurrentPhase1 = demandCurrentPhase1;
	}

	public Double getDemandCurrentPhase2() {
		return this.demandCurrentPhase2;
	}

	public void setDemandCurrentPhase2(Double demandCurrentPhase2) {
		this.demandCurrentPhase2 = demandCurrentPhase2;
	}

	public Double getDemandCurrentPhase3() {
		return this.demandCurrentPhase3;
	}

	public void setDemandCurrentPhase3(Double demandCurrentPhase3) {
		this.demandCurrentPhase3 = demandCurrentPhase3;
	}

	public Double getPuissanceApparenteMoyenneTotale() {
		return this.puissanceApparenteMoyenneTotale;
	}

	public void setPuissanceApparenteMoyenneTotale(
			Double puissanceApparenteMoyenneTotale) {
		this.puissanceApparenteMoyenneTotale = puissanceApparenteMoyenneTotale;
	}

	public Double getMaximumDemandCurrentPhase1() {
		return this.maximumDemandCurrentPhase1;
	}

	public void setMaximumDemandCurrentPhase1(Double maximumDemandCurrentPhase1) {
		this.maximumDemandCurrentPhase1 = maximumDemandCurrentPhase1;
	}

	public Double getMaximumDemandCurrentPhase2() {
		return this.maximumDemandCurrentPhase2;
	}

	public void setMaximumDemandCurrentPhase2(Double maximumDemandCurrentPhase2) {
		this.maximumDemandCurrentPhase2 = maximumDemandCurrentPhase2;
	}

	public Double getMaximumDemandCurrentPhase3() {
		return this.maximumDemandCurrentPhase3;
	}

	public void setMaximumDemandCurrentPhase3(Double maximumDemandCurrentPhase3) {
		this.maximumDemandCurrentPhase3 = maximumDemandCurrentPhase3;
	}

	public Double getMaximumDemandActivePowerPlus() {
		return this.maximumDemandActivePowerPlus;
	}

	public void setMaximumDemandActivePowerPlus(
			Double maximumDemandActivePowerPlus) {
		this.maximumDemandActivePowerPlus = maximumDemandActivePowerPlus;
	}

	public Double getMaximumDemandActivePowerMinus() {
		return this.maximumDemandActivePowerMinus;
	}

	public void setMaximumDemandActivePowerMinus(
			Double maximumDemandActivePowerMinus) {
		this.maximumDemandActivePowerMinus = maximumDemandActivePowerMinus;
	}

	public Double getMaximumDemandReactivePowerPlus() {
		return this.maximumDemandReactivePowerPlus;
	}

	public void setMaximumDemandReactivePowerPlus(
			Double maximumDemandReactivePowerPlus) {
		this.maximumDemandReactivePowerPlus = maximumDemandReactivePowerPlus;
	}

	public Double getMaximumDemandReactivePowerMinus() {
		return this.maximumDemandReactivePowerMinus;
	}

	public void setMaximumDemandReactivePowerMinus(
			Double maximumDemandReactivePowerMinus) {
		this.maximumDemandReactivePowerMinus = maximumDemandReactivePowerMinus;
	}

	public Double getMaximumDemandApparentPower() {
		return this.maximumDemandApparentPower;
	}

	public void setMaximumDemandApparentPower(Double maximumDemandApparentPower) {
		this.maximumDemandApparentPower = maximumDemandApparentPower;
	}

	public Double getOperatingTimeCounter() {
		return this.operatingTimeCounter;
	}

	public void setOperatingTimeCounter(Double operatingTimeCounter) {
		this.operatingTimeCounter = operatingTimeCounter;
	}

	public Double getActiveEnergyInPlus() {
		return this.activeEnergyInPlus;
	}

	public void setActiveEnergyInPlus(Double activeEnergyInPlus) {
		this.activeEnergyInPlus = activeEnergyInPlus;
	}

	public Double getReactiveEnergyInPlus() {
		return this.reactiveEnergyInPlus;
	}

	public void setReactiveEnergyInPlus(Double reactiveEnergyInPlus) {
		this.reactiveEnergyInPlus = reactiveEnergyInPlus;
	}

	public Double getApparentEnergy() {
		return this.apparentEnergy;
	}

	public void setApparentEnergy(Double apparentEnergy) {
		this.apparentEnergy = apparentEnergy;
	}

	public Double getActiveEnergyOutMinus() {
		return this.activeEnergyOutMinus;
	}

	public void setActiveEnergyOutMinus(Double activeEnergyOutMinus) {
		this.activeEnergyOutMinus = activeEnergyOutMinus;
	}

	public Double getReactiveEnergyOutMinus() {
		return this.reactiveEnergyOutMinus;
	}

	public void setReactiveEnergyOutMinus(Double reactiveEnergyOutMinus) {
		this.reactiveEnergyOutMinus = reactiveEnergyOutMinus;
	}

	public Double getInput1PulseCounter() {
		return this.input1PulseCounter;
	}

	public void setInput1PulseCounter(Double input1PulseCounter) {
		this.input1PulseCounter = input1PulseCounter;
	}

}