/*
 * LocationTypePane.java
 *
 * Created on January 26, 2008, 7:34 PM
 */
package sicce.ui.manager.forms;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import sicce.api.businesslogic.ClassFactory;
import sicce.api.businesslogic.LocationBizObject;
import sicce.api.businesslogic.LocationTableModel;
import sicce.api.businesslogic.LocationsAsignedTableModel;
import sicce.api.businesslogic.SicceTableModel;
import sicce.api.businesslogic.ZoneBizObject;
import sicce.api.businesslogic.ZoneTableModel;
import sicce.api.dataaccess.ZoneDB;
import sicce.api.info.ConstantsProvider.DialogResult;
import sicce.api.info.interfaces.ILocation;
import sicce.api.info.interfaces.IZone;
import sicce.api.util.ComponentUtil;
import sicce.ui.manager.controls.JTabExtended;
import sicce.ui.manager.controls.SearchDialog;
import sicce.api.info.ToolBarStateInfo;

/**
 *
 * @author  gish@c
 */
public class ZonePane extends JTabExtended<IZone>  {

    ZoneBizObject zoneBizObject;
    LocationBizObject locationBizObject;
    LocationTableModel locationTableModel;
    LocationsAsignedTableModel lasignedTableModel;
    private IZone zone;
    private ILocation location;
    ZoneTableModel zoneTableModel;

    /** Creates new form LocationTypePane */
    public ZonePane() {
        initComponents();
        this.setHandleToolBarStates(false);
        this.setToolBarStateInfo(new ToolBarStateInfo(true, true, true, true, true, true));
        getControlsToClear().add(txtDescription);
        getControlsToEnable().add(txtDescription);
        getControlsToEnable().add(grdLocationAsigned);
        getControlsToEnable().add(btnAddUbication);
        getControlsToEnable().add(btnDeleteUbication);
        ComponentUtil.SetState(false, getControlsToEnable());
        zoneBizObject = new ZoneBizObject();
        locationBizObject = new LocationBizObject();
        lasignedTableModel = null; 
        
        FillGrid();
        FillLocationsAsignedGrid();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grdLocationAsigned = new javax.swing.JTable();
        btnAddUbication = new javax.swing.JButton();
        btnDeleteUbication = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridZones = new javax.swing.JTable();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sicce.ui.manager.forms.SicceuimanagerApp.class).getContext().getResourceMap(ZonePane.class);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.setName("txtDescription"); // NOI18N
        jScrollPane2.setViewportView(txtDescription);

        lblDescription.setText(resourceMap.getString("lblDescription.text")); // NOI18N
        lblDescription.setName("lblDescription"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane3.setBorder(null);
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        grdLocationAsigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grdLocationAsigned.setName("grdLocationAsigned"); // NOI18N
        jScrollPane3.setViewportView(grdLocationAsigned);

        btnAddUbication.setIcon(resourceMap.getIcon("btnAddUbication.icon")); // NOI18N
        btnAddUbication.setAlignmentX(0.5F);
        btnAddUbication.setAlignmentY(1.5F);
        btnAddUbication.setName("btnAddUbication"); // NOI18N
        btnAddUbication.setPreferredSize(new java.awt.Dimension(50, 21));
        btnAddUbication.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnAddUbication.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAddUbication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUbicationActionPerformed(evt);
            }
        });

        btnDeleteUbication.setIcon(resourceMap.getIcon("btnDeleteUbication.icon")); // NOI18N
        btnDeleteUbication.setAlignmentX(0.5F);
        btnDeleteUbication.setAlignmentY(1.5F);
        btnDeleteUbication.setName("btnDeleteUbication"); // NOI18N
        btnDeleteUbication.setPreferredSize(new java.awt.Dimension(50, 21));
        btnDeleteUbication.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnDeleteUbication.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeleteUbication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUbicationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddUbication, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteUbication, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAddUbication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteUbication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescription)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        gridZones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "No.", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridZones.setName("gridZones"); // NOI18N
        jScrollPane1.setViewportView(gridZones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void btnAddUbicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUbicationActionPerformed
        // TODO add your handling code here:
        SearchDialog<ILocation> searchLocationDialog = new SearchDialog<ILocation>(new JFrame(), true, new LocationTableModel(locationBizObject.GetAllLocations()));
        searchLocationDialog.setVisible(true);
        DialogResult result = searchLocationDialog.getDialogResult();
        if (result == DialogResult.Ok) {

            location = searchLocationDialog.getSearchResult();
            if (location != null) {
              lasignedTableModel.AddLocationToZone(location, currentObject);
              lasignedTableModel = new LocationsAsignedTableModel(currentObject.getLocationsInZone(), currentObject);
              grdLocationAsigned.setModel(lasignedTableModel);
            }
        //  SetUIElements();
            
        }
        
        
}//GEN-LAST:event_btnAddUbicationActionPerformed

    private void btnDeleteUbicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUbicationActionPerformed

        ItemSelectedLocation(grdLocationAsigned.getSelectedRow());
}//GEN-LAST:event_btnDeleteUbicationActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUbication;
    private javax.swing.JButton btnDeleteUbication;
    private javax.swing.JTable grdLocationAsigned;
    private javax.swing.JTable gridZones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables
    @Override
    public boolean Delete() throws Exception {
        cancelAction = false;
        try {
            ZoneDB.Delete(currentObject);
            super.Delete();
            FillGrid();


        } catch (Exception ex) {
            cancelAction = true;
            throw ex;
        }
        return cancelAction;
    }

    @Override
    public void New() {
        super.New();
        currentObject = ClassFactory.getZoneInstance();
        txtDescription.requestFocusInWindow();
        btnAddUbication.setEnabled(true);
        btnDeleteUbication.setEnabled(true);
        
    }

    @Override
    public boolean Save() throws Exception {
        cancelAction = false;
        try {
            currentObject.setDescription(txtDescription.getText());
            for(ILocation l : currentObject.getLocationsInZone()){
                System.out.print(l.getDescription());
            }
            
            if (IsObjectLoaded()) {
                return Update();
            }
            ZoneDB.Save(currentObject);
            FillGrid();

        } catch (Exception ex) {
            ex.printStackTrace();
            cancelAction = true;
        }
        return cancelAction;
    }

    @Override
    public DialogResult Search() {
        SearchDialog<IZone> searchZoneDialog = new SearchDialog<IZone>(new JFrame(), true, new ZoneTableModel(zoneBizObject.GetAllZones()));
        searchZoneDialog.setVisible(true);
        DialogResult result = searchZoneDialog.getDialogResult();
        if (result == DialogResult.Ok) {
            currentObject = searchZoneDialog.getSearchResult();
            SetUIElements();
        }
        return result;
    }

    @Override
    public boolean Update() throws Exception {
        cancelAction = false;
        try {
         
            ZoneDB.Update(currentObject);
            FillGrid();
      
        } catch (Exception ex) {
            cancelAction = true;
        }
        return cancelAction;
    }

    @Override
    public void ItemSelected(int selectedIndex) {
        super.ItemSelected(selectedIndex);
        SicceTableModel<IZone> tableModel = (SicceTableModel<IZone>) gridZones.getModel();
        currentObject = tableModel.getRow(selectedIndex);
        txtDescription.setText(currentObject.getDescription());
        FillLocationsAsignedGrid();
    }

    public void ItemSelectedLocation(int selectedIndex) {
        super.ItemSelected(selectedIndex);
        SicceTableModel<ILocation> tableModel = (SicceTableModel<ILocation>) grdLocationAsigned.getModel();
        location = tableModel.getRow(selectedIndex);
        if (location != null) {
            lasignedTableModel.RemoveLocationZone(location, currentObject);
            FillLocationsAsignedGrid();
        }
    }

    @Override
    public void RegisterSelectionListener() {
        gridZones.getSelectionModel().addListSelectionListener(selectionListener);
        gridZones.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    @Override
    public void FillGrid() {
        zoneTableModel = new ZoneTableModel(zoneBizObject.GetAllZones());
        gridZones.setModel(zoneTableModel);
    }

    /**
     * Carga el grid con los permisos asignados al rol
     */
    private void FillLocationsAsignedGrid() {
        lasignedTableModel = null;
        lasignedTableModel = new LocationsAsignedTableModel((currentObject != null)?currentObject.getLocationsInZone():null, currentObject);
        grdLocationAsigned.setModel(lasignedTableModel);
        grdLocationAsigned.setEnabled(true);
    }
}
