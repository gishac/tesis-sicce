/*
 * ChartPane.java
 *
 * Created on July 5, 2008, 4:18 AM
 */
package sicce.api.processor.viewer.controls;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import org.jfree.chart.ChartPanel;
import sicce.api.processor.Processor;
import sicce.api.processor.viewer.handlers.ChartHandler;
import sicce.api.processor.viewer.handlers.MeasureVisibilityHandler;

/**
 *
 * @author  gish@c
 */
public class ChartPane extends javax.swing.JPanel implements ActionListener {

    private ChartHandler chartHandler;
    private String chartTitle;

    /**
     * 
     * @return
     */
    private ChartHandler getChartHandler() {
        if (chartHandler == null) {
            chartHandler = new ChartHandler();
        }
        return chartHandler;
    }

    /** Creates new form ChartPane */
    public ChartPane(String chartTitle) {
        initComponents();
        this.chartTitle = chartTitle;
        BuildChart();
        AttachChartToDataProcessor();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * 
     */
    private void BuildChart() {
        ChartHandler chartUIHandler = getChartHandler();
        ChartPanel chartPanel = chartUIHandler.BuildChart(chartTitle);
        this.add(chartPanel, BorderLayout.CENTER);
    }

    /**
     * 
     */
    private void AttachChartToDataProcessor() {
        Processor.AddObserver(getChartHandler().getChartObserver());
    }

    /**
     * 
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() instanceof MeasureVisibilityHandler)
        {
            getChartHandler().HandleMeasureChanged(e.getID(), e.getActionCommand());
        }
        else
            getChartHandler().HandlePowerMeterVisibility(e.getActionCommand(), (e.getID() == 1) ? true : false);
    }
    
    /**
     * 
     */
    public void SaveChart(){
        getChartHandler().SaveChart();
    }
}
